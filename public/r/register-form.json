{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "register-form",
  "type": "registry:component",
  "title": "Register Form",
  "description": "Register form with validation and loading/error states",
  "registryDependencies": [
    "form",
    "https://react-authui.vercel.app/r/form-wrapper.json",
    "https://react-authui.vercel.app/r/password-input.json"
  ],
  "files": [
    {
      "path": "src/registry/auth/components/register-form.tsx",
      "content": "'use client';\nimport { z } from 'zod';\nimport {\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { FormWrapper } from '@/registry/auth/components/form-wrapper';\nimport { PasswordInput } from '@/registry/auth/ui/password-input';\n\nconst registerSchema = z\n  .object({\n    email: z.email(),\n    password: z.string().min(8).max(32),\n    re_password: z.string().min(8).max(32),\n    username: z.string().min(2).max(32),\n  })\n  .refine(data => data.password === data.re_password, {\n    message: 'Passwords do not match',\n  });\n\ntype Props = {\n  submitAction: (\n    values: z.infer<typeof registerSchema>,\n  ) => Promise<true | string>;\n  successAction: () => void;\n};\n\nfunction RegisterForm({ submitAction, successAction }: Props) {\n  return (\n    <FormWrapper\n      schema={registerSchema}\n      submitAction={submitAction}\n      successAction={successAction}\n      submitText=\"Create account\"\n      defaultValues={{\n        email: '',\n        password: '',\n        re_password: '',\n        username: '',\n      }}\n    >\n      {form => (\n        <>\n          <FormField\n            control={form.control}\n            name=\"username\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Username</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"admin\"\n                    autoComplete=\"username\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  This is your public display name.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>E-mail</FormLabel>\n                <FormControl>\n                  <Input\n                    {...field}\n                    placeholder=\"username@domain.com\"\n                    autoComplete=\"email\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"password\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Password</FormLabel>\n                <FormControl>\n                  <PasswordInput {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"re_password\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Confirm password</FormLabel>\n                <FormControl>\n                  <PasswordInput {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n    </FormWrapper>\n  );\n}\n\nexport { RegisterForm };\n",
      "type": "registry:component",
      "target": "components/auth/register-form.tsx"
    }
  ]
}